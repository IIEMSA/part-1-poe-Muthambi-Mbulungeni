@model EventEaseDBWebApplication.Models.Venue

@{
    ViewBag.Title = "Delete Venue";
}

@if (TempData["DeleteError"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["DeleteError"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<h2>Delete</h2>

@if (Model.Events.Any() || Model.Bookings.Any())
{
    <div class="alert alert-danger">
        <h4>Active Dependencies Found</h4>

        @if (Model.Events.Any())
        {
            <div class="mb-3">
                <h5>Scheduled Events (@Model.Events.Count)</h5>
                <ul>
                    @foreach (var e in Model.Events.Take(3))
                    {
                        <li>
                            @e.EventName -
                            @e.EventDate.ToString("yyyy-MM-dd")
                            (Bookings: @e.Bookings.Count)
                        </li>
                    }
                    @if (Model.Events.Count > 3)
                    {
                        <li>... and @(Model.Events.Count - 3) more events</li>
                    }
                </ul>
            </div>
        }

        @if (Model.Bookings.Any())
        {
            <div class="mt-3">
                <h5>Active Bookings (@Model.Bookings.Count)</h5>
                <ul>
                    @foreach (var b in Model.Bookings.Take(3))
                    {
                        <li>
                            Booking #@b.BookingId -
                            @b.Event.EventName on
                            @b.BookingDate.ToString("yyyy-MM-dd")
                        </li>
                    }
                    @if (Model.Bookings.Count > 3)
                    {
                        <li>... and @(Model.Bookings.Count - 3) more bookings</li>
                    }
                </ul>
            </div>
        }

        <p class="mt-3 fw-bold">Please delete all associated events and bookings before deleting this venue.</p>
    </div>

    <div>
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
    </div>
}
else
{
    <h3>Are you sure you want to delete this venue?</h3>
    <div>
        <h4>Venue Details</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>@Html.DisplayNameFor(model => model.VenueName)</dt>
            <dd>@Html.DisplayFor(model => model.VenueName)</dd>

            <dt>@Html.DisplayNameFor(model => model.Location)</dt>
            <dd>@Html.DisplayFor(model => model.Location)</dd>

            <dt>@Html.DisplayNameFor(model => model.Capacity)</dt>
            <dd>@Html.DisplayFor(model => model.Capacity)</dd>

            <dt>Image</dt>
            <dd>
                @if (!string.IsNullOrEmpty(Model.ImageUrl))
                {
                    <img src="@Model.ImageUrl" alt="Venue Image" class="img-thumbnail" style="max-height: 200px;" />
                }
                else
                {
                    <span class="text-muted">No image available</span>
                }
            </dd>
        </dl>

        @using (Html.BeginForm(null, null, FormMethod.Post, new { onsubmit = "return confirmDelete();" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-actions no-color">
                <input type="submit" value="Delete" class="btn btn-danger" /> |
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
            </div>
        }
    </div>
}

@section Scripts {
    <script>
        function confirmDelete() {
            return confirm("Are you sure you want to delete this venue?");
        }
    </script>
}