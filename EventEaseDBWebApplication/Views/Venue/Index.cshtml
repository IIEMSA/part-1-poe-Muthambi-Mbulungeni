@model IEnumerable<EventEaseDBWebApplication.Models.Venue>

@{
    ViewBag.Title = "Venues";
}

<h2>Venues</h2>

<!-- SUCCESS / ERROR MESSAGES -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
@if (TempData["DeleteError"] != null)
{
    <div class="alert alert-danger alert-dismissible" role="alert">
        @TempData["DeleteError"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<p>
    @Html.ActionLink("Create New Venue", "Create", null, new { @class = "btn btn-success" })
</p>

<!-- SEARCH FORM -->
@using (Html.BeginForm("Index", "Venue", FormMethod.Get))
{
    <div class="form-group">
        <div class="input-group">
            <input type="text" name="searchTerm" class="form-control" placeholder="Search by venue name, location, or capacity..." value="@ViewBag.CurrentFilter" />
            <div class="input-group-append">
                <button type="submit" class="btn btn-primary">Search</button>
                @if (!string.IsNullOrEmpty(ViewBag.CurrentFilter))
                {
                    @Html.ActionLink("Clear", "Index", null, new { @class = "btn btn-secondary" })
                }
            </div>
        </div>
    </div>
}

@if (Model != null && Model.Any())
{
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>Venue Name</th>
                <th>Location</th>
                <th>Capacity</th>
                <th>Image</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.VenueName)</td>
                    <td>@Html.DisplayFor(modelItem => item.Location)</td>
                    <td>@Html.DisplayFor(modelItem => item.Capacity)</td>
                    <td>
                        @if (!string.IsNullOrEmpty(item.ImageUrl))
                        {
                            <img src="@item.ImageUrl" alt="Venue Image" class="img-thumbnail" style="max-height: 80px;" />
                        }
                        else
                        {
                            <span class="text-muted">No image</span>
                        }
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.VenueId }, new { @class = "btn btn-sm btn-warning" }) |
                        @Html.ActionLink("Details", "Details", new { id = item.VenueId }, new { @class = "btn btn-sm btn-info" }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.VenueId }, new { @class = "btn btn-sm btn-danger" })
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-info">
        @if (!string.IsNullOrEmpty(ViewBag.CurrentFilter))
        {
            <p>No venues found matching "@ViewBag.CurrentFilter".</p>
        }
        else
        {
            <p>No venues found.</p>
        }
    </div>
}